<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:tx="http://www.springframework.org/schema/tx"  
       xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:jms="http://www.springframework.org/schema/jms"
 	   xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
           http://www.springframework.org/schema/data/jpa   
           http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd  
           http://www.springframework.org/schema/tx   
           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
		   http://activemq.apache.org/schema/core 
		   http://activemq.apache.org/schema/core/activemq-core.xsd
		   http://www.springframework.org/schema/jms 
		   http://www.springframework.org/schema/jms/spring-jms.xsd" >  
  	
  	<context:annotation-config />
	
	<context:component-scan base-package="com.habuma.spitter" />
	<context:component-scan base-package="org.shangyang" />
	
	<!-- 以下是 JAX-WS 的默认配置，使用 8080 默认的端口，但因为 SimpleJaxWsServiceExporter 使用独立的 JAX-WS 容器，所以端口必须和 web server 的端口不同  -->
	<!--  
	<bean class = "org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter"/>
	-->
	
	<!-- 定制 -->
	 
	<bean class="org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter" p:baseAddress="http://localhost:8888/webservices/"/>
	 
	<bean class="org.springframework.remoting.rmi.RmiServiceExporter"
	      p:service-ref="spitterRemoteService"
	      p:serviceName="SpitterRmiRemoteService" 
	      p:serviceInterface="com.habuma.spitter.remote.service.ISpitterRemoteService" />

    <bean id="spitterHessianRemoteService" class="org.springframework.remoting.caucho.HessianServiceExporter"
    	  p:service-ref="spitterRemoteService"
    	  p:serviceInterface="com.habuma.spitter.remote.service.ISpitterRemoteService" />

    <bean id="spitterBurlapRemoteService" class="org.springframework.remoting.caucho.BurlapServiceExporter"
    	  p:service-ref="spitterRemoteService"
    	  p:serviceInterface="com.habuma.spitter.remote.service.ISpitterRemoteService" />

    <bean id="spitterHttpInvokerRemoteService" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter"
    	  p:service-ref="spitterRemoteService"
    	  p:serviceInterface="com.habuma.spitter.remote.service.ISpitterRemoteService" /> 
    	  
	<amq:connectionFactory id="connectionFactory" brokerURL="tcp://localhost:61616" />

	<amq:queue id="queue" physicalName="spitter.alert.queue" />
    	  
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
	 	 <property name="connectionFactory" ref="connectionFactory" />
	</bean>	 
		
</beans>        